load("//envoy/config/bootstrap/v2/bootstrap.proto", "Bootstrap")
load(
    "//envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto",
    "HttpConnectionManager",
)
load("//envoy/api/v2/route.proto", "RouteConfiguration")
load("//envoy/api/v2/listener.proto", "Listener")
load("//envoy/api/v2/listener/listener_components.proto", "FilterChain", "Filter")
load(
    "//envoy/api/v2/route/route_components.proto",
    "VirtualHost",
    "Route",
    "RouteMatch",
    "RouteAction",
)

connection_manager = HttpConnectionManager(
    codec_type=HttpConnectionManager.CodecType.AUTO,
    stat_prefix="dummy_service",
    route_config=RouteConfiguration(
        name="dummy_route",
        virtual_hosts=[
            VirtualHost(
                name="dummy_service",
                domains=["*"],
                routes=[
                    Route(
                        name="dummy_route",
                        match=RouteMatch(prefix="/"),
                        route=RouteAction(
                            host_rewrite="www.google.com", cluster="google_service"
                        ),
                    )
                ],
            )
        ],
    ),
)


def main():
    return Bootstrap(
        static_resources=Bootstrap.StaticResources(
            listeners=[
                Listener(
                    name="listener_0",
                    filter_chains=[
                        FilterChain(filters=[Filter(typed_config=connection_manager)])
                    ],
                )
            ]
        )
    )
